<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.mapper.CommentMapper">
    <insert id="writeBoardComment" parameterType="com.server.model.BoardCommentDTO">
        INSERT INTO BOARD_COMMENT
            (
             COMMENT_SEQ,
             COMMENT_BODY,
             COMMENT_DATE,
             USER_ID,
             BOARD_SEQ,
             ONSELF
             )
        VALUES
            (
             0,
             #{body},
             #{date},
             #{userId},
             #{boardSeq},
             #{onself}
             )
    </insert>

    <select id="getBoardComment" resultType="com.server.model.BoardCommentDTO">
        SELECT
            COMMENT_SEQ AS id,
            COMMENT_BODY AS body,
            COMMENT_DATE AS 'date',
            USER_ID AS userId,
            BOARD_SEQ AS boardSeq,
            ONSELF AS onself
        FROM
            BOARD_COMMENT
        WHERE BOARD_SEQ = #{boardSeq}
    </select>
    
    <update id="modifyBoardComment" parameterType="Map">
        <![CDATA[
        UPDATE BOARD_COMMENT
        SET
            COMMENT_BODY = #{body},
            COMMENT_DATE = #{date}
        WHERE
            BOARD_SEQ = #{id} AND COMMENT_SEQ = #{commentId}
        ]]>
    </update>

    <delete id="deleteBoardComment" parameterType="int">
        <![CDATA[
        DELETE FROM BOARD_COMMENT
        WHERE BOARD_SEQ = #{id} AND COMMENT_SEQ = #{commentId}
        ]]>
    </delete>
<!-- 상품 -->
    <insert id="writeProductComment" parameterType="com.server.model.ProductCommentDTO">
        INSERT INTO PRODUCT_COMMENT
        (
            COMMENT_SEQ,
            COMMENT_BODY,
            COMMENT_DATE,
            USER_ID,
            PRODUCT_SEQ,
            ONSELF
        )
        VALUES
            (
                0,
                #{body},
                #{date},
                #{userId},
                #{productSeq},
                #{onself}
            )
    </insert>

    <select id="getProductComment" resultType="com.server.model.ProductCommentDTO">
        SELECT
            COMMENT_SEQ AS id,
            COMMENT_BODY AS body,
            COMMENT_DATE AS 'date',
            USER_ID AS userId,
            PRODUCT_SEQ AS productSeq,
            ONSELF AS onself
        FROM
            PRODUCT_COMMENT
        WHERE PRODUCT_SEQ = #{productSeq}
    </select>

    <update id="modifyProductComment" parameterType="Map">
        <![CDATA[
        UPDATE PRODUCT_COMMENT
        SET
            COMMENT_BODY = #{body},
            COMMENT_DATE = #{date}
        WHERE
            PRODUCT_SEQ = #{id} AND COMMENT_SEQ = #{commentId}
        ]]>
    </update>

    <delete id="deleteProductComment" parameterType="int">
        <![CDATA[
        DELETE FROM PRODUCT_COMMENT
        WHERE PRODUCT_SEQ = #{id} AND COMMENT_SEQ = #{commentId}
        ]]>
    </delete>
    
    <select id="getUserIdByPCommentSeq" parameterType="int" resultType="int">
        SELECT
            USER_ID AS userId
        FROM
            PRODUCT_COMMENT
        WHERE 1 = 1
          AND COMMENT_SEQ = #{commentId}
    </select>

    <select id="getUserIdByBCommentSeq" parameterType="int" resultType="int">
        SELECT
            USER_ID AS userId
        FROM
            BOARD_COMMENT
        WHERE 1 = 1
          AND COMMENT_SEQ = #{commentId}
    </select>
</mapper>